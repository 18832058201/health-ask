<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hebeu.ask.dao.CreditMapper" >
  <resultMap id="BaseResultMap" type="com.hebeu.ask.model.po.Credit" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="action" property="action" jdbcType="CHAR" />
    <result column="source_id" property="sourceId" jdbcType="INTEGER" />
    <result column="source_subject" property="sourceSubject" jdbcType="VARCHAR" />
    <result column="coins" property="coins" jdbcType="INTEGER" />
    <result column="credits" property="credits" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, action, source_id, source_subject, coins, credits, created_at
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hebeu.ask.model.po.CreditExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ask_credits
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ask_credits
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ask_credits
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hebeu.ask.model.po.CreditExample" >
    delete from ask_credits
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hebeu.ask.model.po.Credit" >
    insert into ask_credits (id, user_id, action, 
      source_id, source_subject, coins, 
      credits, created_at)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{action,jdbcType=CHAR}, 
      #{sourceId,jdbcType=INTEGER}, #{sourceSubject,jdbcType=VARCHAR}, #{coins,jdbcType=INTEGER}, 
      #{credits,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hebeu.ask.model.po.Credit" >
    insert into ask_credits
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="action != null" >
        action,
      </if>
      <if test="sourceId != null" >
        source_id,
      </if>
      <if test="sourceSubject != null" >
        source_subject,
      </if>
      <if test="coins != null" >
        coins,
      </if>
      <if test="credits != null" >
        credits,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="action != null" >
        #{action,jdbcType=CHAR},
      </if>
      <if test="sourceId != null" >
        #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="sourceSubject != null" >
        #{sourceSubject,jdbcType=VARCHAR},
      </if>
      <if test="coins != null" >
        #{coins,jdbcType=INTEGER},
      </if>
      <if test="credits != null" >
        #{credits,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hebeu.ask.model.po.CreditExample" resultType="java.lang.Integer" >
    select count(*) from ask_credits
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ask_credits
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.action != null" >
        action = #{record.action,jdbcType=CHAR},
      </if>
      <if test="record.sourceId != null" >
        source_id = #{record.sourceId,jdbcType=INTEGER},
      </if>
      <if test="record.sourceSubject != null" >
        source_subject = #{record.sourceSubject,jdbcType=VARCHAR},
      </if>
      <if test="record.coins != null" >
        coins = #{record.coins,jdbcType=INTEGER},
      </if>
      <if test="record.credits != null" >
        credits = #{record.credits,jdbcType=INTEGER},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ask_credits
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      action = #{record.action,jdbcType=CHAR},
      source_id = #{record.sourceId,jdbcType=INTEGER},
      source_subject = #{record.sourceSubject,jdbcType=VARCHAR},
      coins = #{record.coins,jdbcType=INTEGER},
      credits = #{record.credits,jdbcType=INTEGER},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hebeu.ask.model.po.Credit" >
    update ask_credits
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="action != null" >
        action = #{action,jdbcType=CHAR},
      </if>
      <if test="sourceId != null" >
        source_id = #{sourceId,jdbcType=INTEGER},
      </if>
      <if test="sourceSubject != null" >
        source_subject = #{sourceSubject,jdbcType=VARCHAR},
      </if>
      <if test="coins != null" >
        coins = #{coins,jdbcType=INTEGER},
      </if>
      <if test="credits != null" >
        credits = #{credits,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hebeu.ask.model.po.Credit" >
    update ask_credits
    set user_id = #{userId,jdbcType=INTEGER},
      action = #{action,jdbcType=CHAR},
      source_id = #{sourceId,jdbcType=INTEGER},
      source_subject = #{sourceSubject,jdbcType=VARCHAR},
      coins = #{coins,jdbcType=INTEGER},
      credits = #{credits,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>