<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hebeu.ask.dao.AnswerMapper" >
  <resultMap id="BaseResultMap" type="com.hebeu.ask.model.po.Answer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="question_title" property="questionTitle" jdbcType="VARCHAR" />
    <result column="question_id" property="questionId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="supports" property="supports" jdbcType="INTEGER" />
    <result column="oppositions" property="oppositions" jdbcType="INTEGER" />
    <result column="comments" property="comments" jdbcType="INTEGER" />
    <result column="device" property="device" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="adopted_at" property="adoptedAt" jdbcType="TIMESTAMP" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.hebeu.ask.model.po.Answer" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, question_title, question_id, user_id, supports, oppositions, comments, device, 
    status, adopted_at, created_at, updated_at
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.hebeu.ask.model.po.AnswerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ask_answers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hebeu.ask.model.po.AnswerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ask_answers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from ask_answers
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ask_answers
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hebeu.ask.model.po.AnswerExample" >
    delete from ask_answers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hebeu.ask.model.po.Answer" >
    insert into ask_answers (id, question_title, question_id, 
      user_id, supports, oppositions, 
      comments, device, status, 
      adopted_at, created_at, updated_at, 
      content)
    values (#{id,jdbcType=INTEGER}, #{questionTitle,jdbcType=VARCHAR}, #{questionId,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{supports,jdbcType=INTEGER}, #{oppositions,jdbcType=INTEGER}, 
      #{comments,jdbcType=INTEGER}, #{device,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{adoptedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hebeu.ask.model.po.Answer" >
    insert into ask_answers
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="questionTitle != null" >
        question_title,
      </if>
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="supports != null" >
        supports,
      </if>
      <if test="oppositions != null" >
        oppositions,
      </if>
      <if test="comments != null" >
        comments,
      </if>
      <if test="device != null" >
        device,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="adoptedAt != null" >
        adopted_at,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="questionTitle != null" >
        #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null" >
        #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="supports != null" >
        #{supports,jdbcType=INTEGER},
      </if>
      <if test="oppositions != null" >
        #{oppositions,jdbcType=INTEGER},
      </if>
      <if test="comments != null" >
        #{comments,jdbcType=INTEGER},
      </if>
      <if test="device != null" >
        #{device,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="adoptedAt != null" >
        #{adoptedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hebeu.ask.model.po.AnswerExample" resultType="java.lang.Integer" >
    select count(*) from ask_answers
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ask_answers
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.questionTitle != null" >
        question_title = #{record.questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.questionId != null" >
        question_id = #{record.questionId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.supports != null" >
        supports = #{record.supports,jdbcType=INTEGER},
      </if>
      <if test="record.oppositions != null" >
        oppositions = #{record.oppositions,jdbcType=INTEGER},
      </if>
      <if test="record.comments != null" >
        comments = #{record.comments,jdbcType=INTEGER},
      </if>
      <if test="record.device != null" >
        device = #{record.device,jdbcType=TINYINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.adoptedAt != null" >
        adopted_at = #{record.adoptedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update ask_answers
    set id = #{record.id,jdbcType=INTEGER},
      question_title = #{record.questionTitle,jdbcType=VARCHAR},
      question_id = #{record.questionId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      supports = #{record.supports,jdbcType=INTEGER},
      oppositions = #{record.oppositions,jdbcType=INTEGER},
      comments = #{record.comments,jdbcType=INTEGER},
      device = #{record.device,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      adopted_at = #{record.adoptedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ask_answers
    set id = #{record.id,jdbcType=INTEGER},
      question_title = #{record.questionTitle,jdbcType=VARCHAR},
      question_id = #{record.questionId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      supports = #{record.supports,jdbcType=INTEGER},
      oppositions = #{record.oppositions,jdbcType=INTEGER},
      comments = #{record.comments,jdbcType=INTEGER},
      device = #{record.device,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      adopted_at = #{record.adoptedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hebeu.ask.model.po.Answer" >
    update ask_answers
    <set >
      <if test="questionTitle != null" >
        question_title = #{questionTitle,jdbcType=VARCHAR},
      </if>
      <if test="questionId != null" >
        question_id = #{questionId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="supports != null" >
        supports = #{supports,jdbcType=INTEGER},
      </if>
      <if test="oppositions != null" >
        oppositions = #{oppositions,jdbcType=INTEGER},
      </if>
      <if test="comments != null" >
        comments = #{comments,jdbcType=INTEGER},
      </if>
      <if test="device != null" >
        device = #{device,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="adoptedAt != null" >
        adopted_at = #{adoptedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hebeu.ask.model.po.Answer" >
    update ask_answers
    set question_title = #{questionTitle,jdbcType=VARCHAR},
      question_id = #{questionId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      supports = #{supports,jdbcType=INTEGER},
      oppositions = #{oppositions,jdbcType=INTEGER},
      comments = #{comments,jdbcType=INTEGER},
      device = #{device,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      adopted_at = #{adoptedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hebeu.ask.model.po.Answer" >
    update ask_answers
    set question_title = #{questionTitle,jdbcType=VARCHAR},
      question_id = #{questionId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      supports = #{supports,jdbcType=INTEGER},
      oppositions = #{oppositions,jdbcType=INTEGER},
      comments = #{comments,jdbcType=INTEGER},
      device = #{device,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      adopted_at = #{adoptedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>